version: 2.1

jobs:
  one:
    docker:
    - image: circleci/python:latest
    steps:
    - checkout
    - setup_remote_docker
    - run: echo "A first hello"
    - restore_cache:
        keys:
          - deps8-{{ .Branch }}-{{ checksum "requirements.txt" }}

    # - run: |
    #     docker create -v /cfg --name configs alpine:3.4 /bin/true
    #     docker cp test.txt configs:/cfg
    #     docker run --volumes-from configs python:3.8.1-slim-buster pip install
    # - run: cp -r ~/.cache/pip ~/project/.cache
    - run: docker build -t payers1/test-container .
    - run: docker run --name app payers1/test-container pip install -r requirements.txt
    - run: |
        docker cp app:/usr/local/lib/python3.8/site-packages site_packages
    # mkdir -p ~/.cache/pip
    # docker cp app:/root/.cache/pip ~/.cache/pip
    

    - save_cache:
        key: deps8-{{ .Branch }}-{{ checksum "requirements.txt" }}
        paths:
          - ~/site_packages
    
    # - run:
    #     name: Restoring bundler cache into docker volumes
    #     command: |
    #       NAME=dependencies-cache
    #       CACHE_PATH=~/project/dependencies-cache-1
    #       set -x
    #       mkdir -p $CACHE_PATH
    #       docker-compose -f docker-compose.yml -f circle-dockup.yml up --no-start $NAME
    #       docker cp $CACHE_PATH/. $NAME:/backup
    #       docker-compose -f docker-compose.yml -f circle-dockup.yml up --no-recreate $NAME
    #       docker rm -f $NAME
      
    # # Back up the same volume to circle cache
    # - run:
    #     name: Backing up bundler cache from docker volumes
    #     command: |
    #       NAME=dependencies-cache
    #       CACHE_PATH=~/project/dependencies-cache
    #       set -x
    #       docker-compose -f docker-compose.yml -f circle-dockup.yml run --name $NAME $NAME backup
    #       docker cp $NAME:/backup/. $CACHE_PATH
    #       docker rm -f $NAME
    
    # - save_cache:
    #     key: v4-bundler-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
    #     paths:
    #       - ~/bundler-cache
    
    # - save_cache:
    #     key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
    #     paths:
    #       - deps

    # - run: >
    #     docker build
    #     .
  
  two:
    docker:
    - image: circleci/python:latest
    steps:
    - checkout
    - setup_remote_docker
    - run: echo "A first hello"
    

workflows:
  version: 2
  one_and_two:
    jobs:
    - one
    # - two
    